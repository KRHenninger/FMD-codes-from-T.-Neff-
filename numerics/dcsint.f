CTN TOMS 547

      SUBROUTINE DCSINT(IENT, H, N, TNODE, G, END1, ENDN, B, C, D)
CTN
CTN    use double precision
CTN
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C  THIS SUBROUTINE COMPUTES THE DISCRETE CUBIC SPLINE
C  DEFINED ON THE INTERVAL (TNODE(1),TNODE(N)),WHICH INTER-
C  POLATES THE DATA (TNODE(I),G(I)),I=1,2,...,N. WE REQUIRE
C  THAT TNODE(I).LT.TNODE(I+1). END1 AND ENDN CONTAIN THE
C  VALUES OF THE END CONDITIONS BEING USED.
C
C  IF IENT=1,THE FIRST CENTRAL DIVIDED DIFFERENCE END
C  CONDITIONS ARE BEING USED.
C
C  IF IENT=2,THE SECOND CENTRAL DIVIDED DIFFERENCE END
C  CONDITIONS ARE BEING USED.
C
C  IF IENT=3,THE PERODIC END CONDITIONS ARE BEING USED.
C  FOR THIS CASE THE CONTENTS OF G(N), END1,AND ENDN ARE
C  IGNORED.
C
C  FOR ALL THREE END CONDITIONS N MUST BE GREATER THAN OR
C  EQUAL TO 2.
C
C  THE DISCRETE CUBIC SPLINE IS REPRESENTED BY PIECEWISE
C  CUBIC POLYNOMIALS. FOR T IN THE INTERNAL (TNODE(I),TNODE
C  (I+1)) THE CUBIC SPLINE IS
C
C     S(T)=G(I)+B(I)*(T-TNODE(I))
C                          +C(I)*(T-TNODE(I))**2
C                                   +D(I)*(T-TNODE(I))**3
C
      DIMENSION TNODE(N), G(N), B(N), C(N), D(N)
C
C  INPUT PARAMETERS (NONE OF THESE PARAMETERS
C                          ARE CHANGED BY THIS SUBROUTINE.)
C
C  IENT  - SPECIFIES END CONDITIONS WHICH ARE IN EFFECT.
C  H     - THE STEP SIZE USED FOR THE DISCRETE CUBIC SPLINE.
C  N     - NUMBER OF NODES (TNODE) AND DATA VALUES (G).
C          (N.GE.2)
C  TNODE - REAL ARRAY CONTAINING THE NODES (TNODE(I).LT.
C          TNODE(I+1)).
C  G     - REAL ARRAY CONTAINING THE INTERPOLATING DATA.
C  END1  - END CONDITION VALUE AT TNODE(1).
C  ENDN  - END CONDITION VALUE AT TNODE(N).
C
C  OUTPUT PARAMETERS
C
C  B     - REAL ARRAY CONTAINING COEFFICIENTS OF
C          (T-TNODE(I)),I=1,2,....,N-1.
C  C     - REAL ARRAY CONTAINING COEFFICIENTS OF
C          (T-TNODE(I))**2,I=1,2,...,N-1.
C  D     - REAL ARRAY CONTAINING COEFFICIENTS OF
C          (T-TNODE(I))**3,I=1,2,...,N-1.
C
C  SPECIAL CASES ARE ACCOUNTED FOR HERE.
      IF (N.EQ.2 .AND. IENT.EQ.3) GO TO 220
      H2 = H*H
      N1 = N - 1
      IF (N.EQ.2 .AND. IENT.EQ.2) GO TO 180
      N2 = N1 - 1
C  THE SYMMETRIC TRIDIAGONAL(OR NEAR TRIDIAGONAL) LINEAR
C  SYSTEM WILL NOW BE SET UP FOR THE APPROPRIATE END
C  CONDITIONS
      HI = TNODE(2) - TNODE(1)
      H2DHI = H2/HI
      ETA2 = HI + HI + H2DHI
      GO TO (10, 40, 60), IENT
C  IENT=1 - FIRST CENTRAL DIVIDED DIFFERENCE END CONDITONS
C  SET UP.
   10 B(1) = ETA2
      D(1) = HI - H2DHI
      G2 = (G(2)-G(1))/HI
      C(1) = 3.0*(G2-END1)
      IF (N.EQ.2) GO TO 30
      DO 20 I=2,N1
        ETA1 = ETA2
        G1 = G2
        HI = TNODE(I+1) - TNODE(I)
        H2DHI = H2/HI
        ETA2 = HI + HI + H2DHI
        B(I) = ETA1 + ETA2
        D(I) = HI - H2DHI
        G2 = (G(I+1)-G(I))/HI
        C(I) = 3.0*(G2-G1)
   20 CONTINUE
   30 B(N) = ETA2
      C(N) = 3.0*(ENDN-G2)
      L = N
C  SET UP FOR (1) FIRST CENTRAL DIVIDED DIFFERENCE END
C  CONDITING COMPLETE.THE LINEAR EQUATIONS WILL BE NOW
C  SOLVED.
      GO TO 110
C  IENT=2 - SECOND CENTRAL DIVIDED DIFFERENCE END CONDITIONS
C  SET UP.
   40 GAMMA = HI - H2DHI
      G2 = (G(2)-G(1))/HI
      DO 50 I=1,N2
        ETA1 = ETA2
        G1 = G2
        HI = TNODE(I+2) - TNODE(I+1)
        H2DHI = H2/HI
        ETA2 = HI + HI + H2DHI
        B(I) = ETA1 + ETA2
        D(I) = HI - H2DHI
        G2 = (G(I+2)-G(I+1))/HI
        C(I) = 3.0*(G2-G1)
   50 CONTINUE
      C(1) = C(1) - GAMMA*END1/2.0
      HI = TNODE(N) - TNODE(N1)
      GAMMA = HI - H2/HI
      C(N2) = C(N2) - GAMMA*ENDN/2.0
C  STEP UP FOR (2) SECOND CENTRAL DIVIDED DIFFERENCE
C  END CONDITIONS COMPLETE. THE LINEAR EQUATIONS WILL NOW
C  BE SOLVED.
      IF (N2.EQ.1) GO TO 100
      L = N2
      GO TO 110
C  IENT=3 - PERIODIC END CONDITIONS SET UP.
   60 B(1) = ETA2
      D(1) = HI - H2DHI
      DO 70 I=2,N1
        ETA1 = ETA2
        HI = TNODE(I+1) - TNODE(I)
        H2DHI = H2/HI
        ETA2 = HI + HI + H2DHI
        B(I) = ETA1 + ETA2
        D(I) = HI - H2DHI
        C(I) = 0.0
   70 CONTINUE
      CT = D(N1)
      C(1) = CT
      C(N1) = CT
      B(1) = B(1) + ETA2 - CT
      B(N1) = B(N1) - CT
      L = N1
      ITRANS = 1
      GO TO 120
   80 G1 = (G(N1)-G(N2))/(TNODE(N1)-TNODE(N2))
      G2 = (G(1)-G(N1))/(TNODE(N)-TNODE(N1))
      DEN = (1.0+C(1)+C(N1))
      CT = 3.0*(G2-G1)
      BS1 = CT*C(N1)
      C(N1) = CT
      DO 90 I=1,N2
        HI = TNODE(I+1) - TNODE(I)
        G1 = G2
        G2 = (G(I+1)-G(I))/HI
        CT = 3.0*(G2-G1)
        BS1 = BS1 + CT*C(I)
        C(I) = CT
   90 CONTINUE
      BS1 = BS1/DEN
      C(1) = C(1) - BS1
      C(N1) = C(N1) - BS1
      ITRANS = 0
      GO TO 140
C  THE SET UP AND MOST OF THE DETAILS FOR SOLVING THE
C  LINEAR EQUQTION FOR (3)  THE PERIODIC END CONDITIONS
C  ARE COMPLETED.
C
C  THE LINEAR EQUATION ARE SOLVED HERE.
  100 C(2) = C(1)/B(1)
      GO TO 180
  110 ITRANS = 0
  120 L1 = L - 1
      DO 130 I=1,L1
        T = D(I)/B(I)
        B(I+1) = B(I+1) - T*D(I)
        D(I) = T
  130 CONTINUE
C  THE LINEAR EQUATION SOLVER IS ENTERED AT THIS POINT
C  IF THE LU FACTORIZATION HAS ALREADY BEEN DONE.
  140 DO 150 I=1,L1
        C(I+1) = C(I+1) - D(I)*C(I)
  150 CONTINUE
      C(L) = C(L)/B(L)
      DO 160 I=1,L1
        LI = L - I
        C(LI) = C(LI)/B(LI) - D(LI)*C(LI+1)
  160 CONTINUE
      IF (ITRANS.GE.1) GO TO 80
C  THE LINEAR SYSTEM HAS BEEN SOLVE FOR THE C-VECTOR
      IF (IENT.EQ.3) C(N) = C(1)
      IF (IENT.NE.2) GO TO 190
      DO 170 I=1,N2
        LI = N - I
        C(LI) = C(LI-1)
  170 CONTINUE
  180 C(1) = END1/2.0
      C(N) = ENDN/2.0
  190 C1 = C(1)
      C2 = C(2)
      HI = TNODE(2) - TNODE(1)
      IF (N.EQ.2) GO TO 210
      DO 200 I=1,N2
        B(I) = (G(I+1)-G(I))/HI - HI*(C1+C1+C2)/3.0
        D(I) = (C2-C1)/(3.0*HI)
        HI = TNODE(I+2) - TNODE(I+1)
        C1 = C2
        C2 = C(I+2)
  200 CONTINUE
  210 GN = G(1)
      IF (IENT.NE.3) GN = G(N)
      B(N1) = (GN-G(N1))/HI - HI*(C1+C1+C2)/3.0
      D(N1) = (C2-C1)/(3.0*HI)
C  THE INTERPOLATING DISCRETE CUBIC SPLINE HAS BEEN
C  CONSTRUCTED.
      RETURN
C  THE FOLLOWING HANDLES THE TRIVIAL PERIODIC CASE
C  (IENT.EQ.3) WHEN N.EQ.2.
  220 B(1) = 0.0
      C(1) = 0.0
      D(1) = 0.0
      RETURN
      END

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
